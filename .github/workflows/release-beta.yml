name: Release Beta

on:
  push:
    branches: [beta]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create beta version
        run: |
          # Get current version and increment beta number
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          # Extract base version (e.g., "1.0.1" from "1.0.1-beta.1")
          BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-beta\.[0-9]*//')

          # Extract beta number or start at 1
          if [[ $CURRENT_VERSION =~ -beta\.([0-9]+) ]]; then
            BETA_NUM=$((BASH_REMATCH[1] + 1))
          else
            BETA_NUM=1
          fi

          # Create clean beta version
          BETA_VERSION="${BASE_VERSION}-beta.${BETA_NUM}"

          echo "Creating beta version: $BETA_VERSION"

          # Update package.json version
          npm version $BETA_VERSION --no-git-tag-version

          # Temporarily disable changeset configuration for beta releases
          mv .changeset .changeset.backup || true

      - name: Publish beta to NPM
        run: |
          # Ensure we're using the correct version from package.json
          VERSION=$(node -p "require('./package.json').version")
          echo "Publishing version: $VERSION"

          # Publish with explicit version to avoid changeset conflicts
          npm publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git tag -a "v${VERSION}" -m "Beta release ${VERSION}"
          git push origin "v${VERSION}"

      - name: Restore changeset configuration
        run: |
          # Restore changeset configuration
          mv .changeset.backup .changeset || true

      - name: Commit version bump
        run: |
          git add .
          git commit -m "chore: bump version to ${VERSION} [skip ci]" || true
          git push origin beta
