name: Release Beta

on:
  push:
    tags:
      - "v*-beta.*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          PROMPTRUN_BASE_URL: ${{ secrets.PROMPTRUN_BASE_URL }}

      - name: Build package
        run: npm run build
        env:
          PROMPTRUN_BASE_URL: ${{ secrets.PROMPTRUN_BASE_URL }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract version from tag
        run: |
          # Extract version from the git tag that triggered this workflow
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#v}

          echo "Extracted version from tag: $VERSION"

          # Update package.json to match the tag version (only if different)
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "$VERSION" ]; then
            npm version $VERSION --no-git-tag-version
          else
            echo "Version already matches: $VERSION"
          fi

          # Temporarily disable changeset configuration for beta releases
          mv .changeset .changeset.backup || true

      - name: Publish beta to NPM
        run: ./scripts/publish-beta.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Restore changeset configuration
        run: |
          # Restore changeset configuration
          mv .changeset.backup .changeset || true
